05 资源分配与调度

1、资源管理概述
	1) 资源：是指执行一个用户程序所需要的全部硬件，软件和数据。
	2) 资源静态分配和动态分配
	3) 资源管理的目的（以下目标是有矛盾的，必须权衡。）
		a、保证资源的高利用率；
		b、在“合理”的时间内使所有顾客有获得所需资源的机会；
		c、多不可共享的资源实施互斥；
		d、防止由资源分配不当引起的死锁。
	4) 资源管理的任务
		a、资源数据结构的描述（应包含该类资源最小分配单位的描述，如物理名、逻辑名、类型、地址、分配状态等）
		b、确定资源的分配原则和调度原则
		c、执行资源分配
		d、存取控制和安全保护
	5) 资源分类方法
		a、物理资源和程序资源
		b、单一访问入口资源和多访问入口资源
		c、等同资源：对某类资源，可能有多个完全相同的设备，或称有多个实例。
		d、虚拟资源：系统所管理的资源是有限的，通过操作系统提供的虚拟资源方法，使用户感觉每个进程都拥有所申请的全部资源。

2、资源分配机制
	1) 资源描述器(resource descriptor, RD)：描述各类资源的最小分配单位的数据结构。
	2) 资源信息块(resource information block, rib)：这样一个数据结构用于说明资源、请求者、以及实施分配者所需的必要信息。
		a、等待队列头指针
		b、可利用资源队列头指针
		c、资源分配程序入口地址
		
3、资源分配策略
	1) 先请求先服务：每一个新产生的请求均排在队尾，资源分配程序则从队列中选取第一个请求，并满足其需求。
	2) 优先调度：对每一个进程指定一个优先级，进程调度队列是按进程的优先级由高到低的顺序排队的，队首为优先级最高的。
	
4、死锁
	1) 概念：在两个或多个并发进程中，如果每个进程持有某种资源而又都等待着别的进程释放它们现在保持着的资源，在未改变这种状态之前的都不能向前推进，称这一组进程产生了死锁。
	2) 产生死锁的根本原因：系统能够提供的资源个数比要求该资源的进程数要少。
	3) 产生死锁的必要条件：
		a、互斥条件
		b、不剥夺条件（非抢占）
		c、占有并等待（部分分配）
		d、环路条件：存在一种进程的循环链，链中的每一个进程已经获得的资源同时被链中下一个进程所请求。

5、解决死锁的策略
	为了使系统不发生死锁，必须设法破坏产生死锁的四个必要条件之一。归纳起来有以下策略：
		1) 采用资源静态分配方法预防死锁；
		2) 采用资源动态分配，有控分配方法来避免死锁；
		3) 当死锁发生时，检测出死锁并设法修复；
		4) 忽略死锁，认为死锁不会发生。这种方法为大多数操作系统（如UNIX）使用。

6、预防死锁（针对策略1和2）
	1) 静态预防：预先分配所有共享的资源，只有在满足该作业所需的全部资源的前提下才将它投入运行。
	2) 动态避免：
		a、有序资源分配法：对系统资源分配一个唯一的序号，进程对不同资源申请时必须符合资源序号递增的规定。（避免环路）
		b、银行家算法：新进程进入系统时需要说明对各类资源的最大需求量，当对资源进行请求时，只有满足最大需求量时才允许分配。
		
7、死锁的检测与忽略
	1) 检测：允许死锁发生，需要进程检测，检测在每次分配后进行，或选取比较长时间间隔进行。然后对死锁进行排除。
	2) 忽略：由于检测的算法太复杂，系统开销大，很少使用。操作系统通常采取忽略的方法，若发生死锁，可由管理人员排除。


