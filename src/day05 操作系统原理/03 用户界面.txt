03 用户界面

1、系统启动
	1) 系统引导
		a、初始引导：把系统核心装入主存中的指定位置，并指定地址启动。
		b、核心初始化：执行系统核心的初启子程序，初始化系统核心数据。
		c、系统初始化：为用户使用系统做准备。如建立文件系统等。
	2) 系统引导的方式
		a、独立引导方式：操作系统核心文件存放在系统本身辅存中，由系统自己将核心程序读入主存并运行。
		b、辅助下装方式：从另外的计算机系统中将操作系统常驻内存部分传送到该计算机中，形成一个操作系统。
	3) 独立引导的过程
		a、初始引导
			A 计算机只读存储器（ROM）中有一段用于初始引导的固化代码，系统加电时会自动将这段代码加入主存中，并将CPU控制权交给它。
			B 初始引导程序将外存中的引导程序读入主存。
			C 引导程序进入主存后，任务是将操作系统核心程序读入主存某一位置，然后控制转入核心初始化程序执行。
		b、核心初始化
			A 核心页表寄存器、核心数据的初始化
			B 建立0#进程，该进程是操作系统建立的第一个且永远出入核心态的唯一进程。该进程的任务是将其它需要运行的程序送人主存，并把近期不运行的进程送人辅存。
			C 建立1#进程，该进程是初始化进程，实现系统初始化，负责为终端建立子进程。
		c、系统初始化
			UNIX系统初始化由1#进程完成
			A 首先，为控制台终端创建一个进程（单用户环境）
			B 然后，为每个用户终端建立命名解释进程，当用户登录后，接受用户的shell命令（多用户环境）
			
2、用户程序的运行过程
	1) 作业处理的一般步骤：
		a、编辑
		b、编译。将源程序翻译成浮动的目标代码。
		c、连接。将主程序和其它需要的子程序和例行程序连接装配在一起，使之成为一个可执行、完整的的主存映像文件。
		d、运行。将主存映像文件调入主存，并启动运行，得到结果。
	2) 连接的方式
		a、静态连接
		b、动态连接

3、操作系统用户接口（用户界面）
	1) 操作界面
		a、作业控制语言
		b、键盘命令
		c、图形化用户界面
	2) 程序界面（系统功能调用）
		对用户所学的某些功能，由系统设计者事先编制好的能实现这些功能的例行子程序，作为操作系统程序模块的一部分。
		用户对这些例行子程序的调用应以一种特殊的调用方式――访管方式实现。
		
4、UNIX系统调用
	1) 有关进行管理的系统调用
		fork, wait, sleep, kill等
	2) 与文件和外设管理有关的系统调用
		open, close, read, write, chmod, chown, mount等
	3) 与系统状态有关的系统调用
		getuid, getgid, setuid, setgid, time, stime等

